#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.cowboy
#1 transferring dockerfile: 317B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/erlang:26
#2 DONE 1.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/erlang:26@sha256:3adc390bd74d0ee12fa8d4e2412f66e26922ce387679d6efdd5a147c8369d24c
#4 resolve docker.io/library/erlang:26@sha256:3adc390bd74d0ee12fa8d4e2412f66e26922ce387679d6efdd5a147c8369d24c done
#4 DONE 0.0s

#5 [2/8] WORKDIR /app
#5 CACHED

#6 [internal] load build context
#6 transferring context: 1.70kB done
#6 DONE 0.0s

#7 [3/8] RUN apt-get update && apt-get install -y make git
#7 0.254 Get:1 http://deb.debian.org/debian bookworm InRelease [151 kB]
#7 0.309 Get:2 http://deb.debian.org/debian bookworm-updates InRelease [55.4 kB]
#7 0.314 Get:3 http://deb.debian.org/debian-security bookworm-security InRelease [48.0 kB]
#7 0.479 Get:4 http://deb.debian.org/debian bookworm/main amd64 Packages [8792 kB]
#7 1.363 Get:5 http://deb.debian.org/debian bookworm-updates/main amd64 Packages [13.5 kB]
#7 1.365 Get:6 http://deb.debian.org/debian-security bookworm-security/main amd64 Packages [246 kB]
#7 2.398 Fetched 9306 kB in 2s (4269 kB/s)
#7 2.398 Reading package lists...
#7 2.882 Reading package lists...
#7 3.348 Building dependency tree...
#7 3.467 Reading state information...
#7 3.629 make is already the newest version (4.3-4.1).
#7 3.629 git is already the newest version (1:2.39.5-0+deb12u2).
#7 3.629 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#7 DONE 3.6s

#8 [4/8] RUN wget https://erlang.mk/erlang.mk && chmod +x erlang.mk
#8 0.283 --2025-03-12 01:40:04--  https://erlang.mk/erlang.mk
#8 0.293 Resolving erlang.mk (erlang.mk)... 188.114.96.10, 188.114.97.10, 2a06:98c1:3121::a, ...
#8 0.324 Connecting to erlang.mk (erlang.mk)|188.114.96.10|:443... connected.
#8 0.418 HTTP request sent, awaiting response... 200 OK
#8 0.748 Length: 454 [application/octet-stream]
#8 0.749 Saving to: 'erlang.mk'
#8 0.749 
#8 0.749      0K                                                       100% 2.89M=0s
#8 0.749 
#8 0.750 2025-03-12 01:40:05 (2.89 MB/s) - 'erlang.mk' saved [454/454]
#8 0.750 
#8 DONE 0.8s

#9 [5/8] COPY Makefile .
#9 DONE 0.0s

#10 [6/8] COPY src ./src
#10 DONE 0.1s

#11 [7/8] COPY relx.config .
#11 DONE 0.0s

#12 [8/8] RUN make && make rel
#12 0.207 git clone --depth 1 https://github.com/ninenines/erlang.mk .erlang.mk.build
#12 0.208 Cloning into '.erlang.mk.build'...
#12 1.031 if [ -f build.config ]; then cp build.config .erlang.mk.build; fi
#12 1.032 cd .erlang.mk.build && make
#12 1.035 make[1]: Entering directory '/app/.erlang.mk.build'
#12 1.035 for f in templates/*; do \
#12 1.035 	echo define tpl_`basename $f .erl`; \
#12 1.035 	cat $f; \
#12 1.035 	echo endef; \
#12 1.035 	echo; \
#12 1.035 done > templates.mk
#12 1.060 2023/05/12: Rebar3 is now used for autopatch instead of
#12 1.060             Rebar2. `make distclean` or `rm -rf .erlang.mk`
#12 1.060             might be required after updating Erlang.mk.
#12 1.060             Moving to Rebar3 increases compatibility now
#12 1.060             that few maintained projects are using Rebar2.
#12 1.060             For compatibility reasons the variables to
#12 1.060             point to a different rebar are now REBAR3_GIT
#12 1.060             and REBAR3_COMMIT.
#12 1.060 
#12 1.060 2023/05/12: A number of broken packages have been removed.
#12 1.060             They were all unmaintained and there's a low
#12 1.060             chance that this will break anyone's project.
#12 1.060 
#12 1.060 2023/05/15: Protobuff compilation with `gpb` now uses the
#12 1.060             `{use_packages, true}` option.
#12 1.060 
#12 1.060 2023/05/15: Experimental support for caching git and
#12 1.060             hex dependencies has been added. Set
#12 1.060             `CACHE_DEPS=1` to enable.
#12 1.060 
#12 1.060 2023/05/16: Remove support for HiPE and ErlLLVM.
#12 1.060 
#12 1.060 2024/10/01: Initial beam-cache implementation. This is used
#12 1.060             to cache beam files when switching from/to test
#12 1.060             builds.
#12 1.060 
#12 1.060 2024/11/14: Most packages in the Erlang.mk package index
#12 1.060             have been removed. To ensure that existing
#12 1.060             projects continue working, please add the
#12 1.060             relevant dep_* lines to your projects. If
#12 1.060             you were using dep_*_commit lines make sure
#12 1.060             to update them as well. Note that projects
#12 1.060             that have corresponding Erlang.mk functionality,
#12 1.060             as well as Cowboy, Ranch, Gun and Cowlib remain
#12 1.060             in the index.
#12 1.060 
#12 1.060 2024/11/19: The deprecated defines `dep_fetch`,
#12 1.060             `dep_repo` and `dep_commit` have been removed
#12 1.060             in favor of their `query_*` equivalents.
#12 1.060 +
#12 1.060             The deprecated define `dep_name` will be
#12 1.060             removed at a later date to give time to
#12 1.060             users to upgrade.
#12 1.060 +
#12 1.060             The deprecated legacy fetch method has also
#12 1.060             been removed (`dep_cowboy = https://... ref`
#12 1.060             without an explicit fetch method). Adding "git"
#12 1.060             at the beginning of the dep line is the modern
#12 1.060             equivalent.
#12 1.060 
#12 1.060 2024/11/22: Templates no longer use Make variables for
#12 1.060             substitution. Instead the strings template_name
#12 1.060             and project_name get replaced by their equivalent.
#12 1.060             Note that using variables in your own templates
#12 1.060             should still work, but that this way of doing
#12 1.060             things is deprecated. This change makes it
#12 1.060             possible to have templates outside of Makefiles.
#12 1.060 
#12 1.060 2024/11/27: $(ERL) has been updated. It no longer starts
#12 1.060             the distribution, and limits processes/ports to 1024.
#12 1.060 
#12 1.060 2024/11/28: Autopatching of dependencies that are using
#12 1.060             Rebar2 is deprecated and will be removed in a
#12 1.060             future update. Erlang.mk will always assume
#12 1.060             that a Rebar project uses Rebar3 from that
#12 1.060             point forward.
#12 1.062 make[1]: Leaving directory '/app/.erlang.mk.build'
#12 1.063 cp .erlang.mk.build/erlang.mk ./erlang.mk
#12 1.064 rm -rf .erlang.mk.build
#12 1.218  DEP    cowboy (2.10.0)
#12 3.499 make[1]: Entering directory '/app/deps/cowboy'
#12 3.502  DEP    cowlib (2.12.1)
#12 5.672  DEP    ranch (1.8.0)
#12 6.648 make[2]: Entering directory '/app/deps/cowlib'
#12 6.659  DEPEND cowlib.d
#12 6.959  ERLC   cow_base64url.erl cow_cookie.erl cow_date.erl cow_hpack.erl cow_http.erl cow_http2.erl cow_http2_machine.erl cow_http_hd.erl cow_http_struct_hd.erl cow_http_te.erl cow_iolists.erl cow_link.erl cow_mimetypes.erl cow_multipart.erl cow_qs.erl cow_spdy.erl cow_sse.erl cow_uri.erl cow_uri_template.erl cow_ws.erl
#12 18.56  APP    cowlib
#12 18.66 make[2]: Leaving directory '/app/deps/cowlib'
#12 18.67 make[2]: Entering directory '/app/deps/ranch'
#12 18.67  DEPEND ranch.d
#12 18.88  ERLC   ranch.erl ranch_acceptor.erl ranch_acceptors_sup.erl ranch_app.erl ranch_conns_sup.erl ranch_crc32c.erl ranch_listener_sup.erl ranch_protocol.erl ranch_proxy_header.erl ranch_server.erl ranch_ssl.erl ranch_sup.erl ranch_tcp.erl ranch_transport.erl
#12 19.49  APP    ranch
#12 19.60 make[2]: Leaving directory '/app/deps/ranch'
#12 19.61  DEPEND cowboy.d
#12 19.82  ERLC   cowboy.erl cowboy_app.erl cowboy_bstr.erl cowboy_children.erl cowboy_clear.erl cowboy_clock.erl cowboy_compress_h.erl cowboy_constraints.erl cowboy_handler.erl cowboy_http.erl cowboy_http2.erl cowboy_loop.erl cowboy_metrics_h.erl cowboy_middleware.erl cowboy_req.erl cowboy_rest.erl cowboy_router.erl cowboy_static.erl cowboy_stream.erl cowboy_stream_h.erl cowboy_sub_protocol.erl cowboy_sup.erl cowboy_tls.erl cowboy_tracer_h.erl cowboy_websocket.erl
#12 21.77  APP    cowboy
#12 21.91  GEN    rebar.config
#12 21.91 make[1]: Leaving directory '/app/deps/cowboy'
#12 22.03  DEPEND my_server.d
#12 22.34  ERLC   my_server_app.erl my_server_sup.erl toppage_handler.erl
#12 22.54  APP    my_server.app.src
#12 22.54  DEP    relx (main)
#12 33.39 Evaluating config script "/app/.erlang.mk/rebar3/_build/default/lib/rebar/src/rebar.app.src.script"
#12 33.46 ===> Verifying dependencies...
#12 33.54 ===> Analyzing applications...
#12 33.79 ===> Compiling cf
#12 33.97 ===> Compiling cth_readable
#12 34.08 ===> Compiling certifi
#12 34.12 ===> Compiling eunit_formatters
#12 34.22 ===> Compiling getopt
#12 34.36 ===> Compiling providers
#12 34.42 ===> Compiling bbmustache
#12 34.57 ===> Compiling ssl_verify_fun
#12 34.60 ===> Compiling relx
#12 34.94 ===> Compiling erlware_commons
#12 35.34 ===> Compiling rebar
#12 37.21 ===> Verifying dependencies...
#12 37.22 ===> Cleaning out bbmustache...
#12 37.23 ===> Cleaning out certifi...
#12 37.23 ===> Cleaning out cf...
#12 37.23 ===> Cleaning out cth_readable...
#12 37.24 ===> Cleaning out erlware_commons...
#12 37.24 ===> Cleaning out eunit_formatters...
#12 37.24 ===> Cleaning out getopt...
#12 37.25 ===> Cleaning out providers...
#12 37.25 ===> Cleaning out rebar...
#12 37.28 ===> Cleaning out relx...
#12 37.28 ===> Cleaning out ssl_verify_fun...
#12 37.30 ===> Verifying dependencies...
#12 37.56 ===> Analyzing applications...
#12 37.87 ===> Compiling cf
#12 38.02 ===> Compiling cth_readable
#12 38.12 ===> Compiling certifi
#12 38.15 ===> Compiling eunit_formatters
#12 38.23 ===> Compiling getopt
#12 38.35 ===> Compiling providers
#12 38.41 ===> Compiling bbmustache
#12 38.55 ===> Compiling ssl_verify_fun
#12 38.58 ===> Compiling relx
#12 38.90 ===> Compiling erlware_commons
#12 39.27 ===> Compiling rebar
#12 40.84 ===> Building escript for rebar...
#12 40.99 /app
#12 41.15 [{"1.2.0",[{<<"bbmustache">>,{pkg,<<"bbmustache">>,<<"1.10.0">>},0}]},
#12 41.15  [{pkg_hash,[{<<"bbmustache">>,
#12 41.15               <<"DDC927463F0E95D66CDAC889153AF08015D609124D6D79006C248AD2DE7F6ECD">>}]},
#12 41.15   {pkg_hash_ext,[{<<"bbmustache">>,
#12 41.15                   <<"43EFFA3FD4BB9523157AF5A9E2276C493495B8459FC8737144AA186CB13CE2EE">>}]}]]
#12 41.15 [{<<"bbmustache">>,{pkg,<<"bbmustache">>,<<"1.10.0">>},0}]
#12 41.15 <<"1.10.0">>
#12 41.15 make[1]: Entering directory '/app/deps/relx'
#12 41.16  DEP    hex_core (e57b4fb15cde710b3ae09b1d18f148f6999a63cc)
#12 42.38 make[2]: Entering directory '/app/deps/hex_core'
#12 42.39  XYRL   safe_erl_term.xrl
#12 42.53 Parsing file src/safe_erl_term.xrl, contained 9 rules.
#12 42.53 NFA contains 83 states, DFA contains 40 states, minimised to 20 states.
#12 42.53 Writing file src/safe_erl_term.erl, ok
#12 42.55  DEPEND hex_core.d
#12 42.79  ERLC   hex_api.erl hex_api_auth.erl hex_api_key.erl hex_api_organization.erl hex_api_organization_member.erl hex_api_package.erl hex_api_package_owner.erl hex_api_release.erl hex_api_user.erl hex_core.erl hex_erl_tar.erl hex_filename.erl hex_http.erl hex_http_httpc.erl hex_licenses.erl hex_pb_names.erl hex_pb_package.erl hex_pb_signed.erl hex_pb_versions.erl hex_registry.erl hex_repo.erl hex_tarball.erl safe_erl_term.erl
#12 43.82 Old inliner: threshold=0 functions=[{'erlang_++',3},
#12 43.82                                     {lists_reverse,2},
#12 43.82                                     {cons,3},
#12 43.82                                     {m_overwrite,3},
#12 43.82                                     {v_ok,3},
#12 43.82                                     {id,2}]
#12 43.98 Old inliner: threshold=0 functions=[{'erlang_++',3},
#12 43.98                                     {lists_reverse,2},
#12 43.98                                     {cons,3},
#12 43.98                                     {m_overwrite,3},
#12 43.98                                     {v_ok,3},
#12 43.98                                     {id,2}]
#12 44.26 Old inliner: threshold=0 functions=[{'erlang_++',3},
#12 44.26                                     {lists_reverse,2},
#12 44.26                                     {cons,3},
#12 44.26                                     {m_overwrite,3},
#12 44.26                                     {v_ok,3},
#12 44.26                                     {id,2}]
#12 44.35 Old inliner: threshold=0 functions=[{'erlang_++',3},
#12 44.35                                     {lists_reverse,2},
#12 44.35                                     {cons,3},
#12 44.35                                     {m_overwrite,3},
#12 44.35                                     {v_ok,3},
#12 44.35                                     {id,2}]
#12 44.59 Old inliner: threshold=0 functions=[{yyaction_8,0},
#12 44.59                                     {yyaction_7,1},
#12 44.59                                     {yyaction_6,1},
#12 44.59                                     {yyaction_5,2},
#12 44.59                                     {yyaction_4,2},
#12 44.59                                     {yyaction_3,2},
#12 44.59                                     {yyaction_2,3},
#12 44.59                                     {yyaction_1,3},
#12 44.59                                     {yyaction_0,2}]
#12 44.73  APP    hex_core.app.src
#12 44.73 make[2]: Leaving directory '/app/deps/hex_core'
#12 44.73  DEP    bbmustache (1.10.0)
#12 46.02 make[2]: Entering directory '/app/deps/bbmustache'
#12 46.02  DEPEND bbmustache.d
#12 46.17  ERLC   bbmustache.erl
#12 46.52  APP    bbmustache.app.src
#12 46.52 make[2]: Leaving directory '/app/deps/bbmustache'
#12 46.53  DEPEND relx.d
#12 46.72  ERLC   relx.erl rlx_app_info.erl rlx_assemble.erl rlx_config.erl rlx_file_utils.erl rlx_log.erl rlx_overlay.erl rlx_release.erl rlx_relup.erl rlx_resolve.erl rlx_state.erl rlx_string.erl rlx_tar.erl rlx_util.erl
#12 47.65  APP    relx.app.src
#12 47.65 make[1]: Leaving directory '/app/deps/relx'
#12 47.65 erl -noinput -boot no_dot_erlang -kernel start_distribution false +P 1024 +Q 1024 -pa ebin/ -pz /app/.erlang.mk/rebar3/_build/prod/lib/*/ebin/ -eval "	Config = 	(fun() ->		Config0 =			case file:consult(\"/app/relx.config\") of				{ok, Terms} ->					Terms;				{error, _} ->					[]			end,		case filelib:is_file(\"/app/relx.config.script\") of			true ->				Bindings = erl_eval:add_binding('CONFIG', Config0, erl_eval:new_bindings()),				{ok, Config1} = file:script(\"/app/relx.config.script\", Bindings),				Config1;			false ->				Config0		end	end)(),	{release, {Name, Vsn0}, _} = lists:keyfind(release, 1, Config),	Vsn = case Vsn0 of		{cmd, Cmd} -> os:cmd(Cmd);		semver -> \"\";		{semver, _} -> \"\";		{git, short} -> string:trim(os:cmd(\"git rev-parse --short HEAD\"), both, \"\n\");		{git, long} -> string:trim(os:cmd(\"git rev-parse HEAD\"), both, \"\n\");		VsnStr -> Vsn0	end,	{ok, _} = relx:build_release(#{name => Name, vsn => Vsn}, Config ++ [{output_dir, \"_rel\"}]),	halt(0)." -- erlang.mk
#12 47.80 Solving Release my_server-0.1.0Error! Failed to eval: 	Config = 	(fun() ->		Config0 =			case file:consult("/app/relx.config") of				{ok, Terms} ->					Terms;				{error, _} ->					[]			end,		case filelib:is_file("/app/relx.config.script") of			true ->				Bindings = erl_eval:add_binding('CONFIG', Config0, erl_eval:new_bindings()),				{ok, Config1} = file:script("/app/relx.config.script", Bindings),				Config1;			false ->				Config0		end	end)(),	{release, {Name, Vsn0}, _} = lists:keyfind(release, 1, Config),	Vsn = case Vsn0 of		{cmd, Cmd} -> os:cmd(Cmd);		semver -> "";		{semver, _} -> "";		{git, short} -> string:trim(os:cmd("git rev-parse --short HEAD"), both, "\n");		{git, long} -> string:trim(os:cmd("git rev-parse HEAD"), both, "\n");		VsnStr -> Vsn0	end,	{ok, _} = relx:build_release(#{name => Name, vsn => Vsn}, Config ++ [{output_dir, "_rel"}]),	halt(0).
#12 47.80 
#12 47.80 Runtime terminating during boot ({{error,{rlx_resolve,{app_not_found,my_server,undefined}}},[{rlx_resolve,subset,7,[{file,"src/rlx_resolve.erl"},{line,72}]},{rlx_resolve,'-fold_apps/7-fun-0-',7,[{file,"src/rlx_resolve.erl"},{line,99}]},{lists,foldl,3,[{file,"lists.erl"},{line,1594}]},{rlx_resolve,subset,5,[{file,"src/rlx_resolve.erl"},{line,54}]},{rlx_resolve,solve_release,2,[{file,"src/rlx_resolve.erl"},{line,48}]},{relx,build_release_,3,[{file,"src/relx.erl"},{line,170}]},{relx,build_release,3,[{file,"src/relx.erl"},{line,87}]},{erl_eval,do_apply,7,[{file,"erl_eval.erl"},{line,746}]}]})
#12 47.80 
#12 47.80 Crash dump is being written to: erl_crash.dump...done
#12 47.95 make: *** [erlang.mk:3826: relx-rel] Error 1
#12 ERROR: process "/bin/sh -c make && make rel" did not complete successfully: exit code: 2
------
 > [8/8] RUN make && make rel:
46.52 make[2]: Leaving directory '/app/deps/bbmustache'
46.53  DEPEND relx.d
46.72  ERLC   relx.erl rlx_app_info.erl rlx_assemble.erl rlx_config.erl rlx_file_utils.erl rlx_log.erl rlx_overlay.erl rlx_release.erl rlx_relup.erl rlx_resolve.erl rlx_state.erl rlx_string.erl rlx_tar.erl rlx_util.erl
47.65  APP    relx.app.src
Error! Failed to eval: 	Config = 	(fun() ->		Config0 =			case file:consult("/app/relx.config") of				{ok, Terms} ->					Terms;				{error, _} ->					[]			end,		case filelib:is_file("/app/relx.config.script") of			true ->				Bindings = erl_eval:add_binding('CONFIG', Config0, erl_eval:new_bindings()),				{ok, Config1} = file:script("/app/relx.config.script", Bindings),				Config1;			false ->				Config0		end	end)(),	{release, {Name, Vsn0}, _} = lists:keyfind(release, 1, Config),	Vsn = case Vsn0 of		{cmd, Cmd} -> os:cmd(Cmd);		semver -> "";		{semver, _} -> "";		{git, short} -> string:trim(os:cmd("git rev-parse --short HEAD"), both, "\n");		{git, long} -> string:trim(os:cmd("git rev-parse HEAD"), both, "\n");		VsnStr -> Vsn0	end,	{ok, _} = relx:build_release(#{name => Name, vsn => Vsn}, Config ++ [{output_dir, "_rel"}]),	halt(0).
47.80 
47.80 Runtime terminating during boot ({{error,{rlx_resolve,{app_not_found,my_server,undefined}}},[{rlx_resolve,subset,7,[{file,"src/rlx_resolve.erl"},{line,72}]},{rlx_resolve,'-fold_apps/7-fun-0-',7,[{file,"src/rlx_resolve.erl"},{line,99}]},{lists,foldl,3,[{file,"lists.erl"},{line,1594}]},{rlx_resolve,subset,5,[{file,"src/rlx_resolve.erl"},{line,54}]},{rlx_resolve,solve_release,2,[{file,"src/rlx_resolve.erl"},{line,48}]},{relx,build_release_,3,[{file,"src/relx.erl"},{line,170}]},{relx,build_release,3,[{file,"src/relx.erl"},{line,87}]},{erl_eval,do_apply,7,[{file,"erl_eval.erl"},{line,746}]}]})
47.80 
47.80 Crash dump is being written to: erl_crash.dump...done
47.95 make: *** [erlang.mk:3826: relx-rel] Error 1
------
Dockerfile.cowboy:8
--------------------
   6 |     COPY src ./src
   7 |     COPY relx.config .
   8 | >>> RUN make && make rel
   9 |     EXPOSE 8080
  10 |     CMD ["_rel/my_server/bin/my_server", "foreground"]
--------------------
ERROR: failed to solve: process "/bin/sh -c make && make rel" did not complete successfully: exit code: 2
